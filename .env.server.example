# NOTE: you can let Wasp set up your Postgres DB by running `wasp start db` in a separate terminal window. 
# then, in a new terminal window, run `wasp db migrate-dev` and finally `wasp start`.
# If you use `wasp start db` then you DO NOT need to add a DATABASE_URL env variable here.
# DATABASE_URL=

# for testing, go to https://dashboard.stripe.com/test/apikeys and get a test stripe key that starts with "sk_test_..."
STRIPE_KEY=sk_test_...
# to create a test subscription, go to https://dashboard.stripe.com/test/products and click on + Add Product
HOBBY_SUBSCRIPTION_PRICE_ID=price_...
PRO_SUBSCRIPTION_PRICE_ID=price_...
# after downloading starting the stripe cli (https://stripe.com/docs/stripe-cli) with `stripe listen --forward-to localhost:3001/stripe-webhook` it will output your signing secret
STRIPE_WEBHOOK_SECRET=whsec_...

# set this as a comma-separated list of emails you want to give admin privileges to upon registeration
ADMIN_EMAILS=me@example.com,you@example.com,them@example.com

# this needs to be a string at least 32 characters long
JWT_SECRET=

# see our guide for setting up google auth: https://wasp-lang.dev/docs/auth/social-auth/google
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# get your sendgrid api key at https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=
# if not explicitly set to true, emails be logged to console but not actually sent
SEND_EMAILS_IN_DEVELOPMENT=true

# (OPTIONAL) get your openai api key at https://platform.openai.com/account
OPENAI_API_KEY=

# (OPTIONAL) get your plausible api key at https://plausible.io/login or https://your-plausible-instance.com/login
PLAUSIBLE_API_KEY=
# You will find your site id in the Plausible dashboard. It will look like 'opensaas.sh'
PLAUSIBLE_SITE_ID=
PLAUSIBLE_BASE_URL=https://plausible.io/api/v1 # if you are self-hosting plausible, change this to your plausible instance's base url

# (OPTIONAL) get your google service account key at https://console.cloud.google.com/iam-admin/serviceaccounts
GOOGLE_ANALYTICS_CLIENT_EMAIL=
# Make sure you convert the private key within the JSON file to base64 first with `echo -n "PRIVATE_KEY" | base64`. see the docs for more info. 
GOOGLE_ANALYTICS_PRIVATE_KEY=
# You will find your Property ID in the Google Analytics dashboard. It will look like '987654321'
GOOGLE_ANALYTICS_PROPERTY_ID=